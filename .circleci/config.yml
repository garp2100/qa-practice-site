version: 2.1

executors:
  node-executor:
    docker:
      - image: cimg/node:20.11

jobs:
  build:
    executor: node-executor
    steps:
      - checkout
      - run:
          name: Install server deps
          command: |
            cd server
            npm ci     # ✅ install deps
      - run:
          name: Run tests
          command: npm test || echo "⚠️ No tests found, skipping..."
      - run:
          name: Build server
          command: |
            cd server
            npx tsc -p . && mkdir -p dist && cp src/schema.sql dist/schema.sql
      - persist_to_workspace:
          root: .
          paths:
            - .

  docker-build-and-push:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: .
      - run:
          name: Install gcloud
          command: |
            echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
            sudo apt-get update -y
            sudo apt-get install -y google-cloud-sdk
            gcloud version
      - run:
          name: Authenticate with GCP
          command: |
            echo "PROJECT=$GOOGLE_PROJECT_ID"
            echo "REGION=$GCP_REGION"
            echo "$GOOGLE_CREDENTIALS" > ${HOME}/gcp-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcp-key.json
            gcloud config set project $GOOGLE_PROJECT_ID
            gcloud config set run/region $GCP_REGION
            gcloud auth configure-docker ${GCP_REGION}-docker.pkg.dev -q
      - run:
          name: Build & Push Docker image (server + client)
          command: |
            IMAGE_URI=${GCP_REGION}-docker.pkg.dev/$GOOGLE_PROJECT_ID/qa-practice-repo/qa-practice-site:latest
            docker version
            docker buildx version || true
            docker buildx create --use --name xbuilder || true
            docker buildx inspect --bootstrap
            # Build for linux/amd64 and push to Artifact Registry
            docker buildx build --platform linux/amd64 -t $IMAGE_URI --push .
            echo "IMAGE_URI=$IMAGE_URI" >> $BASH_ENV

  deploy:
    docker:
      - image: google/cloud-sdk:slim
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Setup gcloud
          command: |
            echo "$GOOGLE_CREDENTIALS" > ${HOME}/gcp-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcp-key.json
            gcloud config set project $GOOGLE_PROJECT_ID
            gcloud config set run/region $GCP_REGION
      - run:
          name: Deploy to Cloud Run
          command: |
            gcloud run deploy qa-practice-site \
              --image ${GCP_REGION}-docker.pkg.dev/$GOOGLE_PROJECT_ID/qa-practice-repo/qa-practice-site:latest \
              --region $GCP_REGION \
              --platform managed \
              --allow-unauthenticated \
              --add-cloudsql-instances $INSTANCE_CONNECTION_NAME \
              --env-vars-file cloudrun.env.yaml

workflows:
  build_and_deploy:
    jobs:
      - build
      - docker-build-and-push:
          requires:
            - build
      - deploy:
          requires:
            - docker-build-and-push